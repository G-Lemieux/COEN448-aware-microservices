version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongo_container
    hostname: mongodb
    environment:
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
  
  mongodb-setup:
    image: python:3.10-slim
    container_name: mongo_setup
    build:
      context: ./shared/config/mongodb/
      dockerfile: Dockerfile
    depends_on:
      - mongodb
    env_file:
      - .env
    links:
      - mongodb
      
  order-service:
    build:
      context: .
      dockerfile: order_service/Dockerfile
    container_name: order_service
    environment:
      - FLASK_APP=wsgi
      - FLASK_ENV=${FLASK_ENV}
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${DATABASE_NAME}?authSource=admin
      - DATABASE_NAME=${DATABASE_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_ORDER_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_ORDER_PASSWORD}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
    ports:
      - "5001:5000"
    depends_on:
      rabbitmq:
          condition: service_healthy

  user-service-v1:
    build:
      context: .
      dockerfile: user_service_v1/Dockerfile
    container_name: user_service_v1
    environment:
      - FLASK_APP=wsgi
      - FLASK_ENV=${FLASK_ENV}
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${DATABASE_NAME}?authSource=admin
      - DATABASE_NAME=${DATABASE_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_USER_PASSWORD}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
    ports:
      - "5002:5000"
    depends_on:
      rabbitmq:
          condition: service_healthy
    
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ messaging port
      - "15672:15672" # RabbitMQ management UI
    expose:
      - 5673
      - 15672
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 3

  # kong:
  #   build:
  #     context: ./api_gateway
  #     dockerfile: Dockerfile
  #   environment:
  #     - KONG_DATABASE=off
  #     - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
  #     - KONG_PROXY_ACCESS_LOG=/dev/stdout
  #     - KONG_ADMIN_ACCESS_LOG=/dev/stdout
  #     - KONG_PROXY_ERROR_LOG=/dev/stderr
  #     - KONG_ADMIN_ERROR_LOG=/dev/stderr
  #     - KONG_ADMIN_LISTEN=0.0.0.0:8081
  #     - USER_SERVICE_V1_WEIGHT=${USER_SERVICE_V1_WEIGHT}
  #     - USER_SERVICE_V2_WEIGHT=${USER_SERVICE_V2_WEIGHT}
  #   ports:
  #     - "8080:8000"
  #     - "8443:8443"
  #     - "8081:8001"
  #     - "8444:8444"

  # konga:
  #   image: pantsel/konga:latest
  #   environment:
  #     - NODE_ENV=production
  #   ports:
  #     - "1337:1337"

volumes:
  mongodb_data: